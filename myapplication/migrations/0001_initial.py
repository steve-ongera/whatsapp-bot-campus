# Generated by Django 5.2 on 2025-05-30 15:21

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('student', 'Student'), ('class_rep', 'Class Representative'), ('teacher', 'Teacher'), ('admin', 'Admin')], default='student', max_length=50)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImportantKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('schedule', 'Schedule'), ('assignment', 'Assignment'), ('exam', 'Exam'), ('deadline', 'Deadline'), ('meeting', 'Meeting'), ('announcement', 'Announcement'), ('task', 'Task'), ('report', 'Report')], max_length=50)),
                ('weight', models.IntegerField(default=1, help_text='Importance weight (1-10)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='WhatsAppGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=100, unique=True)),
                ('group_name', models.CharField(max_length=255)),
                ('group_type', models.CharField(choices=[('class', 'Class Group'), ('study', 'Study Group'), ('general', 'General Group')], default='class', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(max_length=100, unique=True)),
                ('content', models.TextField()),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('document', 'Document'), ('audio', 'Audio'), ('video', 'Video'), ('sticker', 'Sticker')], default='text', max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapplication.groupmember')),
                ('whatsapp_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapplication.whatsappgroup')),
            ],
        ),
        migrations.CreateModel(
            name='BotResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_type', models.CharField(choices=[('broadcast', 'Broadcast to Group'), ('direct_message', 'Direct Message'), ('escalate', 'Escalate to Human'), ('ignore', 'Ignore Message'), ('auto_reply', 'Auto Reply')], max_length=50)),
                ('response_content', models.TextField(blank=True, null=True)),
                ('recipients', models.JSONField(blank=True, default=list)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('original_message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapplication.message')),
            ],
        ),
        migrations.CreateModel(
            name='MessageClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_important', models.BooleanField(default=False)),
                ('importance_score', models.FloatField(default=0.0)),
                ('detected_keywords', models.JSONField(blank=True, default=list)),
                ('classification_method', models.CharField(choices=[('keyword', 'Keyword Based'), ('ml', 'Machine Learning'), ('manual', 'Manual Classification'), ('sender_role', 'Based on Sender Role')], default='keyword', max_length=50)),
                ('confidence_level', models.FloatField(default=0.0)),
                ('classified_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapplication.message')),
            ],
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('command', 'Bot Command'), ('query', 'Information Query'), ('feedback', 'Feedback'), ('request_summary', 'Request Summary'), ('report_issue', 'Report Issue')], max_length=50)),
                ('content', models.TextField()),
                ('bot_response', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('was_helpful', models.BooleanField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapplication.groupmember')),
            ],
        ),
        migrations.CreateModel(
            name='MessageSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_type', models.CharField(choices=[('daily', 'Daily Summary'), ('weekly', 'Weekly Summary'), ('custom', 'Custom Period')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_messages', models.IntegerField(default=0)),
                ('important_messages', models.IntegerField(default=0)),
                ('summary_content', models.TextField()),
                ('key_topics', models.JSONField(blank=True, default=list)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('whatsapp_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapplication.whatsappgroup')),
            ],
        ),
        migrations.AddField(
            model_name='groupmember',
            name='whatsapp_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapplication.whatsappgroup'),
        ),
        migrations.CreateModel(
            name='BotConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_broadcast_important', models.BooleanField(default=True)),
                ('minimum_importance_score', models.FloatField(default=0.7)),
                ('escalation_threshold', models.FloatField(default=0.5)),
                ('enable_keyword_detection', models.BooleanField(default=True)),
                ('enable_sender_role_priority', models.BooleanField(default=True)),
                ('notification_delay_minutes', models.IntegerField(default=0)),
                ('max_messages_per_hour', models.IntegerField(default=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('whatsapp_group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapplication.whatsappgroup')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='groupmember',
            unique_together={('whatsapp_group', 'phone_number')},
        ),
        migrations.CreateModel(
            name='BotPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('messages_processed', models.IntegerField(default=0)),
                ('important_messages_detected', models.IntegerField(default=0)),
                ('false_positives', models.IntegerField(default=0)),
                ('false_negatives', models.IntegerField(default=0)),
                ('accuracy_score', models.FloatField(default=0.0)),
                ('response_time_avg', models.FloatField(default=0.0)),
                ('user_satisfaction_score', models.FloatField(default=0.0)),
                ('whatsapp_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapplication.whatsappgroup')),
            ],
            options={
                'unique_together': {('whatsapp_group', 'date')},
            },
        ),
    ]
